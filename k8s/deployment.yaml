apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector: 
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15.0
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_USER
            value: "newsuser"
          - name: POSTGRES_PASSWORD
            value: "newspwd"
          - name: POSTGRES_DB
            value: "news"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 3
  selector: 
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: joaohcca/devops4devs-news:v1
          ports:
            - containerPort: 8070
          env:
              - name: DB_DATABASE
                value: "news"
              - name: DB_USERNAME
                value: "newsuser"
              - name: DB_PASSWORD
                value: "newspwd"
              - name: DB_HOST
                value:  "postgres"
              - name: AWS_ACCESS_KEY
                value: mykey
              - name: AWS_ACCESS_SECRET
                value: mysecret
              - name: AWS_REGION
                value: us-east-1
              - name: STORAGE_TYPE
                value: S3
              - name: AWS_S3_BUCKET_NAME
                value: "myappbucket"
---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  selector:
    app: web
  ports:
    - port: 80
      targetPort: 8070
      nodePort: 30000
  type: NodePort #muda em casos de nuvem que Ã© load balancer
---